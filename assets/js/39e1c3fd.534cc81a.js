"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1933],{1471:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>h,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"Development Core/DATA","title":"DATA","description":"","source":"@site/docs/02_Development Core/DATA.md","sourceDirName":"02_Development Core","slug":"/Development Core/DATA","permalink":"/ecosys.documents/docs/Development Core/DATA","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Operating Systems","permalink":"/ecosys.documents/docs/Systems & Innovation/Systems/Operating Systems/"},"next":{"title":"CEH","permalink":"/ecosys.documents/docs/Development Core/SEC/CEH"}}');var i=e(4848),o=e(8453);const c={},a=void 0,h={},s=[];function u(n){const t={code:"code",pre:"pre",...(0,o.R)(),...n.components};return(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'D\u1eee LI\u1ec6U (DATA)\r\n\u2502\r\n\u251c\u2500\u2500 1. D\u1eee LI\u1ec6U NGUY\xcaN TH\u1ee6Y (Primitive / Scalar Types)\r\n\u2502   \u2502   \u2192 Kh\xf4ng th\u1ec3 chia nh\u1ecf h\u01a1n trong ng\u1eef c\u1ea3nh ng\xf4n ng\u1eef; th\u01b0\u1eddng \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 b\u1edfi ph\u1ea7n c\u1ee9ng ho\u1eb7c runtime\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 S\u1ed1 h\u1ecdc:\r\n\u2502   \u2502   \u251c\u2500\u2500 S\u1ed1 nguy\xean: int, byte, short, long, uint, bigint\r\n\u2502   \u2502   \u251c\u2500\u2500 S\u1ed1 th\u1ef1c: float, double, half (IEEE 754)\r\n\u2502   \u2502   \u2514\u2500\u2500 S\u1ed1 th\u1eadp ph\xe2n ch\xednh x\xe1c: decimal, BigDecimal (d\xf9ng trong t\xe0i ch\xednh)\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 K\xfd t\u1ef1 & v\u0103n b\u1ea3n:\r\n\u2502   \u2502   \u251c\u2500\u2500 K\xfd t\u1ef1 \u0111\u01a1n: char, code point (Unicode)\r\n\u2502   \u2502   \u2514\u2500\u2500 Chu\u1ed7i: string (immutable, first-class)\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 Logic: boolean (true/false)\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 Th\u1eddi gian: date, time, datetime, timestamp, duration\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 Gi\xe1 tr\u1ecb \u0111\u1eb7c bi\u1ec7t: null, undefined, none, void\r\n\u2502   \u2502\r\n\u2502   \u2514\u2500\u2500 Tham chi\u1ebfu: pointer, reference, handle (\u0111\u1ecba ch\u1ec9 b\u1ed9 nh\u1edb ho\u1eb7c \u0111\u1ed1i t\u01b0\u1ee3ng)\r\n\u2502\r\n\u2502\r\n\u251c\u2500\u2500 2. C\u1ea4U TR\xdaC H\u1ee2P CH\u1ea4T C\u01a0 B\u1ea2N (Built-in Composite Types)\r\n\u2502   \u2502   \u2192 \u0110\u01b0\u1ee3c ng\xf4n ng\u1eef h\u1ed7 tr\u1ee3 tr\u1ef1c ti\u1ebfp nh\u01b0 \u201cnguy\xean th\u1ee7y b\u1eadc cao\u201d; kh\xf4ng c\u1ea7n c\xe0i \u0111\u1eb7t th\u1ee7 c\xf4ng\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 Tuple: (x, y, "name") \u2014 d\xe3y c\u1ed1 \u0111\u1ecbnh, th\u1ee9 t\u1ef1, \u0111a ki\u1ec3u (heterogeneous)\r\n\u2502   \u251c\u2500\u2500 Record / Struct: {name: "A", age: 30} \u2014 t\u1eadp h\u1ee3p tr\u01b0\u1eddng c\xf3 t\xean (homogeneous/heterogeneous)\r\n\u2502   \u251c\u2500\u2500 Array / List: [1, 2, 3] \u2014 d\xe3y \u0111\u1ed9ng ho\u1eb7c t\u0129nh, c\xf9ng ki\u1ec3u (homogeneous)\r\n\u2502   \u251c\u2500\u2500 Set: {1, 2, 3} \u2014 t\u1eadp h\u1ee3p kh\xf4ng tr\xf9ng l\u1eb7p, kh\xf4ng th\u1ee9 t\u1ef1\r\n\u2502   \u2514\u2500\u2500 Map / Dict / Hash: {"key": value} \u2014 \xe1nh x\u1ea1 kh\xf3a \u2192 gi\xe1 tr\u1ecb\r\n\u2502\r\n\u2502\r\n\u251c\u2500\u2500 3. C\u1ea4U TR\xdaC D\u1eee LI\u1ec6U THU\u1eacT TO\xc1N (Algorithmic Data Structures)\r\n\u2502   \u2502   \u2192 D\u1ef1a tr\xean c\xe1c ki\u1ec3u tr\xean, \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 t\u1ed1i \u01b0u thao t\xe1c (th\xeam, x\xf3a, t\xecm ki\u1ebfm\u2026)\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 Danh s\xe1ch li\xean k\u1ebft (Linked List)\r\n\u2502   \u251c\u2500\u2500 Ng\u0103n x\u1ebfp (Stack) & H\xe0ng \u0111\u1ee3i (Queue / Deque)\r\n\u2502   \u251c\u2500\u2500 C\xe2y (Tree):\r\n\u2502   \u2502   \u251c\u2500\u2500 Binary Tree, BST\r\n\u2502   \u2502   \u251c\u2500\u2500 Trie (c\xe2y ti\u1ec1n t\u1ed1)\r\n\u2502   \u2502   \u251c\u2500\u2500 Heap (min/max)\r\n\u2502   \u2502   \u2514\u2500\u2500 C\xe2y c\xe2n b\u1eb1ng (AVL, Red-Black, B-Tree)\r\n\u2502   \u251c\u2500\u2500 \u0110\u1ed3 th\u1ecb (Graph): c\xf3 h\u01b0\u1edbng / v\xf4 h\u01b0\u1edbng, c\xf3 tr\u1ecdng s\u1ed1\r\n\u2502   \u2514\u2500\u2500 B\u1ea3ng b\u0103m (Hash Table) \u2014 n\u1ec1n t\u1ea3ng cho Set/Map\r\n\u2502\r\n\u2502\r\n\u251c\u2500\u2500 4. M\xd4 H\xccNH D\u1eee LI\u1ec6U H\u01af\u1edaNG H\xc0NH VI & TR\u1eeaU T\u01af\u1ee2NG\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 L\u1eadp tr\xecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng (OOP):\r\n\u2502   \u2502   \u251c\u2500\u2500 Class / Object\r\n\u2502   \u2502   \u251c\u2500\u2500 Encapsulation, Inheritance, Polymorphism\r\n\u2502   \u2502   \u2514\u2500\u2500 Interface / Abstract Type\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 Ki\u1ec3u tr\u1eebu t\u01b0\u1ee3ng (Abstract Data Type - ADT):\r\n\u2502   \u2502   \u2514\u2500\u2500 \u0110\u1ecbnh ngh\u0129a qua h\xe0nh vi (API), kh\xf4ng ph\u1ee5 thu\u1ed9c c\xe0i \u0111\u1eb7t (vd: Stack l\xe0 ADT, c\xf3 th\u1ec3 c\xe0i b\u1eb1ng array ho\u1eb7c linked list)\r\n\u2502   \u2502\r\n\u2502   \u2514\u2500\u2500 M\xf4 h\xecnh t\xe1c t\u1eed (Actor Model):\r\n\u2502       \u2514\u2500\u2500 D\u1eef li\u1ec7u s\u1ed1ng trong c\xe1c th\u1ef1c th\u1ec3 \u0111\u1ed9c l\u1eadp, giao ti\u1ebfp qua tin nh\u1eafn (Erlang, Akka)\r\n\u2502\r\n\u2502\r\n\u251c\u2500\u2500 5. M\xd4 H\xccNH D\u1eee LI\u1ec6U QUAN H\u1ec6 & NG\u1eee NGH\u0128A\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 Quan h\u1ec7 (Relational Model):\r\n\u2502   \u2502   \u251c\u2500\u2500 B\u1ea3ng (Table), h\xe0ng (Tuple), c\u1ed9t (Attribute)\r\n\u2502   \u2502   \u251c\u2500\u2500 Kh\xf3a ch\xednh, kh\xf3a ngo\u1ea1i\r\n\u2502   \u2502   \u2514\u2500\u2500 Ph\xe9p to\xe1n quan h\u1ec7 (SELECT, JOIN\u2026)\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 M\xf4 h\xecnh th\u1ef1c th\u1ec3-m\u1ed1i quan h\u1ec7 (ER Model)\r\n\u2502   \u2502\r\n\u2502   \u2514\u2500\u2500 D\u1eef li\u1ec7u ng\u1eef ngh\u0129a (Semantic Data):\r\n\u2502       \u251c\u2500\u2500 Triple: (ch\u1ee7 th\u1ec3, v\u1ecb t\u1eeb, \u0111\u1ed1i t\u01b0\u1ee3ng) \u2014 RDF\r\n\u2502       \u251c\u2500\u2500 Ontology: m\xf4 t\u1ea3 kh\xe1i ni\u1ec7m & quan h\u1ec7 (OWL)\r\n\u2502       \u2514\u2500\u2500 Knowledge Graph (Google, Wikidata)\r\n\u2502\r\n\u2502\r\n\u251c\u2500\u2500 6. D\u1eee LI\u1ec6U H\u01af\u1edaNG LU\u1ed2NG & S\u1ef0 KI\u1ec6N\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 Lu\u1ed3ng (Stream): d\u1eef li\u1ec7u li\xean t\u1ee5c theo th\u1eddi gian (sensor, log, video)\r\n\u2502   \u251c\u2500\u2500 S\u1ef1 ki\u1ec7n (Event): h\xe0nh \u0111\u1ed9ng c\xf3 th\u1eddi \u0111i\u1ec3m (click, transaction)\r\n\u2502   \u251c\u2500\u2500 Log (immutable append-only sequence) \u2014 n\u1ec1n t\u1ea3ng c\u1ee7a h\u1ec7 th\u1ed1ng ph\xe2n t\xe1n\r\n\u2502   \u2514\u2500\u2500 Ki\u1ebfn tr\xfac: Event Sourcing, CQRS, Reactive Streams\r\n\u2502\r\n\u2502\r\n\u251c\u2500\u2500 7. D\u1eee LI\u1ec6U T\u1ef0 M\xd4 T\u1ea2 & MANG NG\u1eee C\u1ea2NH\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500 Schema k\xe8m d\u1eef li\u1ec7u: JSON Schema, Protocol Buffers, Avro, Parquet\r\n\u2502   \u251c\u2500\u2500 D\u1eef li\u1ec7u c\xf3 ngu\u1ed3n g\u1ed1c (Provenance): ai t\u1ea1o? khi n\xe0o? t\u1eeb \u0111\xe2u?\r\n\u2502   \u251c\u2500\u2500 D\u1eef li\u1ec7u mang ch\xednh s\xe1ch: quy\u1ec1n truy c\u1eadp, GDPR compliance\r\n\u2502   \u2514\u2500\u2500 Capability-based data: d\u1eef li\u1ec7u \u0111i k\xe8m kh\u1ea3 n\u0103ng h\xe0nh \u0111\u1ed9ng\r\n\u2502\r\n\u2502\r\n\u2514\u2500\u2500 8. D\u1eee LI\u1ec6U TRONG H\u1ec6 TH\u1ed0NG TH\xd4NG MINH & T\u01af\u01a0NG LAI\r\n    \u2502\r\n    \u251c\u2500\u2500 Vector / Embedding: bi\u1ec3u di\u1ec5n ng\u1eef ngh\u0129a (word2vec, CLIP)\r\n    \u251c\u2500\u2500 Tensor: m\u1ea3ng \u0111a chi\u1ec1u (PyTorch, TensorFlow)\r\n    \u251c\u2500\u2500 Bi\u1ec3u di\u1ec5n x\xe1c su\u1ea5t: ph\xe2n ph\u1ed1i, Bayesian networks\r\n    \u251c\u2500\u2500 Bi\u1ec3u di\u1ec5n lai (Neuro-symbolic): k\u1ebft h\u1ee3p m\u1ea1ng neural + logic\r\n    \u251c\u2500\u2500 Qubit: \u0111\u01a1n v\u1ecb th\xf4ng tin l\u01b0\u1ee3ng t\u1eed (superposition, entanglement)\r\n    \u2514\u2500\u2500 D\u1eef li\u1ec7u trong h\u1ec7 \u0111a t\xe1c t\u1eed (Multi-agent systems): d\u1eef li\u1ec7u \u2192 tri th\u1ee9c \u2192 h\xe0nh \u0111\u1ed9ng t\u1ef1 tr\u1ecb\n'})})}function l(n={}){const{wrapper:t}={...(0,o.R)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},8453:(n,t,e)=>{e.d(t,{R:()=>c,x:()=>a});var r=e(6540);const i={},o=r.createContext(i);function c(n){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function a(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:c(n.components),r.createElement(o.Provider,{value:t},n.children)}}}]);